# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dist_numpy_relation_store.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import ndarray_pb2 as ndarray__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dist_numpy_relation_store.proto',
  package='graph2tensor.client',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1f\x64ist_numpy_relation_store.proto\x12\x13graph2tensor.client\x1a\rndarray.proto\"\x1d\n\rBatchingProto\x12\x0c\n\x04size\x18\x01 \x01(\x05\"\xd3\x01\n\x0fSamplingRequest\x12.\n\x03ids\x18\x01 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x0e\n\x01n\x18\x02 \x01(\x05H\x00\x88\x01\x01\x12\x18\n\x0bnum_threads\x18\x03 \x01(\x05H\x01\x88\x01\x01\x12\x14\n\x07replace\x18\x04 \x01(\x08H\x02\x88\x01\x01\x12\x1b\n\x0euse_edge_probs\x18\x05 \x01(\x08H\x03\x88\x01\x01\x42\x04\n\x02_nB\x0e\n\x0c_num_threadsB\n\n\x08_replaceB\x11\n\x0f_use_edge_probs\"\xab\x01\n\x0c\x45\x64geIdsProto\x12\x32\n\x07src_ids\x18\x01 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x32\n\x07\x64st_ids\x18\x02 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x33\n\x08\x65\x64ge_ids\x18\x03 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\"\xb8\x01\n\x08HopProto\x12\x32\n\x07nbr_ids\x18\x01 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x31\n\x06offset\x18\x02 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x38\n\x08\x65\x64ge_ids\x18\x03 \x01(\x0b\x32!.graph2tensor.client.NdarrayProtoH\x00\x88\x01\x01\x42\x0b\n\t_edge_ids\"\x90\x02\n\x0bWalkRequest\x12.\n\x03ids\x18\x01 \x01(\x0b\x32!.graph2tensor.client.NdarrayProto\x12\x13\n\x0bwalk_length\x18\x02 \x01(\x05\x12\x0e\n\x01p\x18\x03 \x01(\x02H\x00\x88\x01\x01\x12\x0e\n\x01q\x18\x04 \x01(\x02H\x01\x88\x01\x01\x12#\n\x16\x64iscard_frequent_nodes\x18\x05 \x01(\x08H\x02\x88\x01\x01\x12\x14\n\x07\x66req_th\x18\x06 \x01(\x02H\x03\x88\x01\x01\x12\x1b\n\x0euse_edge_probs\x18\x07 \x01(\x08H\x04\x88\x01\x01\x42\x04\n\x02_pB\x04\n\x02_qB\x19\n\x17_discard_frequent_nodesB\n\n\x08_freq_thB\x11\n\x0f_use_edge_probs\"\x1b\n\nPathsProto\x12\r\n\x05paths\x18\x01 \x01(\t2\x9d\x05\n\x16\x44istNumpyRelationStore\x12Y\n\x0cget_edge_ids\x12\".graph2tensor.client.BatchingProto\x1a!.graph2tensor.client.EdgeIdsProto\"\x00\x30\x01\x12[\n\x0eget_edge_probs\x12\".graph2tensor.client.BatchingProto\x1a!.graph2tensor.client.NdarrayProto\"\x00\x30\x01\x12]\n\x14sample_all_neighbors\x12$.graph2tensor.client.SamplingRequest\x1a\x1d.graph2tensor.client.HopProto\"\x00\x12^\n\x15sample_topk_neighbors\x12$.graph2tensor.client.SamplingRequest\x1a\x1d.graph2tensor.client.HopProto\"\x00\x12\x62\n\x19sample_neighbors_randomly\x12$.graph2tensor.client.SamplingRequest\x1a\x1d.graph2tensor.client.HopProto\"\x00\x12R\n\x0brandom_walk\x12 .graph2tensor.client.WalkRequest\x1a\x1f.graph2tensor.client.PathsProto\"\x00\x12T\n\rnode2vec_walk\x12 .graph2tensor.client.WalkRequest\x1a\x1f.graph2tensor.client.PathsProto\"\x00\x62\x06proto3'
  ,
  dependencies=[ndarray__pb2.DESCRIPTOR,])




_BATCHINGPROTO = _descriptor.Descriptor(
  name='BatchingProto',
  full_name='graph2tensor.client.BatchingProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='graph2tensor.client.BatchingProto.size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=100,
)


_SAMPLINGREQUEST = _descriptor.Descriptor(
  name='SamplingRequest',
  full_name='graph2tensor.client.SamplingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='graph2tensor.client.SamplingRequest.ids', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='n', full_name='graph2tensor.client.SamplingRequest.n', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_threads', full_name='graph2tensor.client.SamplingRequest.num_threads', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='replace', full_name='graph2tensor.client.SamplingRequest.replace', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_edge_probs', full_name='graph2tensor.client.SamplingRequest.use_edge_probs', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_n', full_name='graph2tensor.client.SamplingRequest._n',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_num_threads', full_name='graph2tensor.client.SamplingRequest._num_threads',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_replace', full_name='graph2tensor.client.SamplingRequest._replace',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_use_edge_probs', full_name='graph2tensor.client.SamplingRequest._use_edge_probs',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=103,
  serialized_end=314,
)


_EDGEIDSPROTO = _descriptor.Descriptor(
  name='EdgeIdsProto',
  full_name='graph2tensor.client.EdgeIdsProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='src_ids', full_name='graph2tensor.client.EdgeIdsProto.src_ids', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dst_ids', full_name='graph2tensor.client.EdgeIdsProto.dst_ids', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='edge_ids', full_name='graph2tensor.client.EdgeIdsProto.edge_ids', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=317,
  serialized_end=488,
)


_HOPPROTO = _descriptor.Descriptor(
  name='HopProto',
  full_name='graph2tensor.client.HopProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nbr_ids', full_name='graph2tensor.client.HopProto.nbr_ids', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='graph2tensor.client.HopProto.offset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='edge_ids', full_name='graph2tensor.client.HopProto.edge_ids', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_edge_ids', full_name='graph2tensor.client.HopProto._edge_ids',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=491,
  serialized_end=675,
)


_WALKREQUEST = _descriptor.Descriptor(
  name='WalkRequest',
  full_name='graph2tensor.client.WalkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='graph2tensor.client.WalkRequest.ids', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='walk_length', full_name='graph2tensor.client.WalkRequest.walk_length', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='p', full_name='graph2tensor.client.WalkRequest.p', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='q', full_name='graph2tensor.client.WalkRequest.q', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='discard_frequent_nodes', full_name='graph2tensor.client.WalkRequest.discard_frequent_nodes', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_th', full_name='graph2tensor.client.WalkRequest.freq_th', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_edge_probs', full_name='graph2tensor.client.WalkRequest.use_edge_probs', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_p', full_name='graph2tensor.client.WalkRequest._p',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_q', full_name='graph2tensor.client.WalkRequest._q',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_discard_frequent_nodes', full_name='graph2tensor.client.WalkRequest._discard_frequent_nodes',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_freq_th', full_name='graph2tensor.client.WalkRequest._freq_th',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_use_edge_probs', full_name='graph2tensor.client.WalkRequest._use_edge_probs',
      index=4, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=678,
  serialized_end=950,
)


_PATHSPROTO = _descriptor.Descriptor(
  name='PathsProto',
  full_name='graph2tensor.client.PathsProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='paths', full_name='graph2tensor.client.PathsProto.paths', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=952,
  serialized_end=979,
)

_SAMPLINGREQUEST.fields_by_name['ids'].message_type = ndarray__pb2._NDARRAYPROTO
_SAMPLINGREQUEST.oneofs_by_name['_n'].fields.append(
  _SAMPLINGREQUEST.fields_by_name['n'])
_SAMPLINGREQUEST.fields_by_name['n'].containing_oneof = _SAMPLINGREQUEST.oneofs_by_name['_n']
_SAMPLINGREQUEST.oneofs_by_name['_num_threads'].fields.append(
  _SAMPLINGREQUEST.fields_by_name['num_threads'])
_SAMPLINGREQUEST.fields_by_name['num_threads'].containing_oneof = _SAMPLINGREQUEST.oneofs_by_name['_num_threads']
_SAMPLINGREQUEST.oneofs_by_name['_replace'].fields.append(
  _SAMPLINGREQUEST.fields_by_name['replace'])
_SAMPLINGREQUEST.fields_by_name['replace'].containing_oneof = _SAMPLINGREQUEST.oneofs_by_name['_replace']
_SAMPLINGREQUEST.oneofs_by_name['_use_edge_probs'].fields.append(
  _SAMPLINGREQUEST.fields_by_name['use_edge_probs'])
_SAMPLINGREQUEST.fields_by_name['use_edge_probs'].containing_oneof = _SAMPLINGREQUEST.oneofs_by_name['_use_edge_probs']
_EDGEIDSPROTO.fields_by_name['src_ids'].message_type = ndarray__pb2._NDARRAYPROTO
_EDGEIDSPROTO.fields_by_name['dst_ids'].message_type = ndarray__pb2._NDARRAYPROTO
_EDGEIDSPROTO.fields_by_name['edge_ids'].message_type = ndarray__pb2._NDARRAYPROTO
_HOPPROTO.fields_by_name['nbr_ids'].message_type = ndarray__pb2._NDARRAYPROTO
_HOPPROTO.fields_by_name['offset'].message_type = ndarray__pb2._NDARRAYPROTO
_HOPPROTO.fields_by_name['edge_ids'].message_type = ndarray__pb2._NDARRAYPROTO
_HOPPROTO.oneofs_by_name['_edge_ids'].fields.append(
  _HOPPROTO.fields_by_name['edge_ids'])
_HOPPROTO.fields_by_name['edge_ids'].containing_oneof = _HOPPROTO.oneofs_by_name['_edge_ids']
_WALKREQUEST.fields_by_name['ids'].message_type = ndarray__pb2._NDARRAYPROTO
_WALKREQUEST.oneofs_by_name['_p'].fields.append(
  _WALKREQUEST.fields_by_name['p'])
_WALKREQUEST.fields_by_name['p'].containing_oneof = _WALKREQUEST.oneofs_by_name['_p']
_WALKREQUEST.oneofs_by_name['_q'].fields.append(
  _WALKREQUEST.fields_by_name['q'])
_WALKREQUEST.fields_by_name['q'].containing_oneof = _WALKREQUEST.oneofs_by_name['_q']
_WALKREQUEST.oneofs_by_name['_discard_frequent_nodes'].fields.append(
  _WALKREQUEST.fields_by_name['discard_frequent_nodes'])
_WALKREQUEST.fields_by_name['discard_frequent_nodes'].containing_oneof = _WALKREQUEST.oneofs_by_name['_discard_frequent_nodes']
_WALKREQUEST.oneofs_by_name['_freq_th'].fields.append(
  _WALKREQUEST.fields_by_name['freq_th'])
_WALKREQUEST.fields_by_name['freq_th'].containing_oneof = _WALKREQUEST.oneofs_by_name['_freq_th']
_WALKREQUEST.oneofs_by_name['_use_edge_probs'].fields.append(
  _WALKREQUEST.fields_by_name['use_edge_probs'])
_WALKREQUEST.fields_by_name['use_edge_probs'].containing_oneof = _WALKREQUEST.oneofs_by_name['_use_edge_probs']
DESCRIPTOR.message_types_by_name['BatchingProto'] = _BATCHINGPROTO
DESCRIPTOR.message_types_by_name['SamplingRequest'] = _SAMPLINGREQUEST
DESCRIPTOR.message_types_by_name['EdgeIdsProto'] = _EDGEIDSPROTO
DESCRIPTOR.message_types_by_name['HopProto'] = _HOPPROTO
DESCRIPTOR.message_types_by_name['WalkRequest'] = _WALKREQUEST
DESCRIPTOR.message_types_by_name['PathsProto'] = _PATHSPROTO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BatchingProto = _reflection.GeneratedProtocolMessageType('BatchingProto', (_message.Message,), {
  'DESCRIPTOR' : _BATCHINGPROTO,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.BatchingProto)
  })
_sym_db.RegisterMessage(BatchingProto)

SamplingRequest = _reflection.GeneratedProtocolMessageType('SamplingRequest', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLINGREQUEST,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.SamplingRequest)
  })
_sym_db.RegisterMessage(SamplingRequest)

EdgeIdsProto = _reflection.GeneratedProtocolMessageType('EdgeIdsProto', (_message.Message,), {
  'DESCRIPTOR' : _EDGEIDSPROTO,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.EdgeIdsProto)
  })
_sym_db.RegisterMessage(EdgeIdsProto)

HopProto = _reflection.GeneratedProtocolMessageType('HopProto', (_message.Message,), {
  'DESCRIPTOR' : _HOPPROTO,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.HopProto)
  })
_sym_db.RegisterMessage(HopProto)

WalkRequest = _reflection.GeneratedProtocolMessageType('WalkRequest', (_message.Message,), {
  'DESCRIPTOR' : _WALKREQUEST,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.WalkRequest)
  })
_sym_db.RegisterMessage(WalkRequest)

PathsProto = _reflection.GeneratedProtocolMessageType('PathsProto', (_message.Message,), {
  'DESCRIPTOR' : _PATHSPROTO,
  '__module__' : 'dist_numpy_relation_store_pb2'
  # @@protoc_insertion_point(class_scope:graph2tensor.client.PathsProto)
  })
_sym_db.RegisterMessage(PathsProto)



_DISTNUMPYRELATIONSTORE = _descriptor.ServiceDescriptor(
  name='DistNumpyRelationStore',
  full_name='graph2tensor.client.DistNumpyRelationStore',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=982,
  serialized_end=1651,
  methods=[
  _descriptor.MethodDescriptor(
    name='get_edge_ids',
    full_name='graph2tensor.client.DistNumpyRelationStore.get_edge_ids',
    index=0,
    containing_service=None,
    input_type=_BATCHINGPROTO,
    output_type=_EDGEIDSPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='get_edge_probs',
    full_name='graph2tensor.client.DistNumpyRelationStore.get_edge_probs',
    index=1,
    containing_service=None,
    input_type=_BATCHINGPROTO,
    output_type=ndarray__pb2._NDARRAYPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='sample_all_neighbors',
    full_name='graph2tensor.client.DistNumpyRelationStore.sample_all_neighbors',
    index=2,
    containing_service=None,
    input_type=_SAMPLINGREQUEST,
    output_type=_HOPPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='sample_topk_neighbors',
    full_name='graph2tensor.client.DistNumpyRelationStore.sample_topk_neighbors',
    index=3,
    containing_service=None,
    input_type=_SAMPLINGREQUEST,
    output_type=_HOPPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='sample_neighbors_randomly',
    full_name='graph2tensor.client.DistNumpyRelationStore.sample_neighbors_randomly',
    index=4,
    containing_service=None,
    input_type=_SAMPLINGREQUEST,
    output_type=_HOPPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='random_walk',
    full_name='graph2tensor.client.DistNumpyRelationStore.random_walk',
    index=5,
    containing_service=None,
    input_type=_WALKREQUEST,
    output_type=_PATHSPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='node2vec_walk',
    full_name='graph2tensor.client.DistNumpyRelationStore.node2vec_walk',
    index=6,
    containing_service=None,
    input_type=_WALKREQUEST,
    output_type=_PATHSPROTO,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DISTNUMPYRELATIONSTORE)

DESCRIPTOR.services_by_name['DistNumpyRelationStore'] = _DISTNUMPYRELATIONSTORE

# @@protoc_insertion_point(module_scope)
